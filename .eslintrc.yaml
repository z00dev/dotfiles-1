---
parserOptions:
  sourceType: script
  ecmaFeatures:
    globalReturn: false
env:
  browser: true
  node: true
extends:
  - eslint:recommended
rules:
  strict:
    - error
    - safe
  #
  # Possible errors:
  #
  no-console:
    - error
  no-debugger:
    - error
  no-extra-parens:
    - error
  no-prototype-builtins:
    - error
  no-unsafe-negation:
    - error
  #
  # Best practices:
  #
  array-callback-return:
    - error
  block-scoped-var:
    - error
  curly:
    - error
    - multi-line
  dot-location:
    - error
    - property
  dot-notation:
    - error
    - allowKeywords: false
  eqeqeq:
    - error
    - smart
  guard-for-in:
    - error
  no-alert:
    - error
  no-caller:
    - error
  no-else-return:
    - error
  no-empty-function:
    - error
  no-eq-null:
    - error
  no-eval:
    - error
  no-extend-native:
    - error
  no-extra-bind:
    - error
  no-global-assign:
    - error
  no-floating-decimal:
    - error
  no-implicit-coercion:
    - error
  no-implicit-globals:
    - error
  no-implied-eval:
    - error
  no-invalid-this:
    - error
  no-labels:
    - error
  no-iterator:
    - error
  no-lone-blocks:
    - error
  no-loop-func:
    - error
  no-multi-spaces:
    - error
  no-multi-str:
    - error
  no-new-func:
    - error
  no-new-wrappers:
    - error
  no-new:
    - error
  no-octal-escape:
    - error
  no-proto:
    - error
  no-return-assign:
    - error
  no-script-url:
    - error
  no-self-compare:
    - error
  no-sequences:
    - error
  no-throw-literal:
    - error
  no-unmodified-loop-condition:
    - error
  no-unused-expressions:
    - error
  no-useless-call:
    - error
  no-useless-concat:
    - error
  no-useless-escape:
    - error
  no-void:
    - error
  no-warning-comments:
    - warn
  no-with:
    - error
  radix:
    - error
  yoda:
    - error
  #
  # Variables:
  #
  no-delete-var:
    - error
  no-shadow-restricted-names:
    - error
  no-undef-init:
    - error
  no-use-before-define:
    - error
  #
  # Stylistic issues:
  #
  array-bracket-spacing:
    - error
  block-spacing:
    - error
  brace-style:
    - error
  camelcase:
    - error
  comma-dangle:
    - error
    - always-multiline
  comma-spacing:
    - error
  comma-style:
    - error
  computed-property-spacing:
    - error
  consistent-this:
    - error
    - vm
  eol-last:
    - error
  func-call-spacing:
    - error
  func-name-matching:
    - error
  func-style:
    - error
  indent:
    - error
    - tab
    - SwitchCase: 1
      VariableDeclarator: 1
      MemberExpression: 1
      FunctionDeclaration:
        parameters: 2
      FunctionExpression:
        parameters: 2
      CallExpression:
        arguments: 1
  key-spacing:
    - error
  keyword-spacing:
    - error
  linebreak-style:
    - error
  line-comment-position:
    - error
  lines-around-directive:
    - error
  new-cap:
    - error
  new-parens:
    - error
  newline-after-var:
    - error
  newline-before-return:
    - error
  newline-per-chained-call:
    - error
    - ignoreChainWithDepth: 3
  no-array-constructor:
    - error
  no-bitwise:
    - error
  no-continue:
    - error
  no-lonely-if:
    - error
  no-mixed-spaces-and-tabs:
    - error
    - smart-tabs
  no-multiple-empty-lines:
    - error
    - max: 1
      maxEOF: 0
      maxBOF: 0
  no-negated-condition:
    - error
  no-nested-ternary:
    - error
  no-new-object:
    - error
  no-plusplus:
    - error
    - allowForLoopAfterthoughts: true
  no-trailing-spaces:
    - error
  no-underscore-dangle:
    - error
  no-unneeded-ternary:
    - error
  no-whitespace-before-property:
    - error
  object-curly-newline:
    - error
  object-curly-spacing:
    - error
    - always
  object-property-newline:
    - error
    - allowMultiplePropertiesPerLine: true
  one-var-declaration-per-line:
    - error
  operator-assignment:
    - error
  operator-linebreak:
    - error
  quote-props:
    - error
    - as-needed
    - keywords: true
      unnecessary: true
      numbers: true
  quotes:
    - error
    - single
    - avoidEscape: true
  semi-spacing:
    - error
  semi:
    - error
    - always
  space-before-blocks:
    - error
  space-before-function-paren:
    - error
    - anonymous: always
      named: never
  space-in-parens:
    - error
  space-infix-ops:
    - error
  space-unary-ops:
    - error
  spaced-comment:
    - error
    - always
    - block:
        markers:
          - '*'
        balanced: true
  unicode-bom:
    - error
